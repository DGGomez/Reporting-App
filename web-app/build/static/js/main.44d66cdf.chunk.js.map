{"version":3,"sources":["logo.svg","actions/dataActions.js","components/Card.js","pages/MainPage.js","pages/ReportPage.js","pages/ClassifierPage.js","pages/successPage.js","components/NavBar.js","components/Footer.js","App.js","serviceWorker.js","reducers/index.js","reducers/readReducer.js","store/index.js","index.js"],"names":["module","exports","createData","title","location","description","callback","a","console","log","axios","post","readData","dispatch","get","res","type","payload","body","Card","this","props","className","Component","DashboardPage","handleSubmit","event","preventDefault","loginUser","history","state","query","yourLocation","page","setState","loading","handleChange","target","id","value","renderForm","loaded","styles","center","onSubmit","FormGroup","controlId","bsSize","FormControl","onChange","Button","block","disabled","validateForm","renderList","time","intervalID","setInterval","bind","updatedList","searchQuery","map","listItems","class","length","marginLeft","marginRight","minHeight","connect","ReportPage","push","autoFocus","ClassifierPage","user","token","offsite","offsiteFake","columns","ticketNum","SuccessPage","setTimeout","NavBar","rel","href","integrity","crossorigin","Navbar","bg","expand","Brand","Nav","Link","Footer","style","footerStyle","padding","color","background","position","left","width","bottom","App","height","marginBottom","Route","path","exact","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","rootReducer","combineReducers","allfiles","action","middlewares","thunk","createLogger","store","createStore","reducers","applyMiddleware","ReactDOM","render","STORE","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.44d66cdf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import axios from 'axios';\r\n\r\nexport const createData = (title, location, description, callback) => async () =>{\r\n    try{\r\n        console.log(\"GOODBYE\")\r\n        const res = await axios.post('/create', {title,location,description});\r\n        console.log('HELLO');\r\n        callback();\r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const readAllData = (callback) => async (dispatch) =>{\r\n    try{\r\n        const res = await axios.get(`/readAll`);\r\n        dispatch({\r\n            type: 'ALLFILES',\r\n            payload: res.body\r\n        });\r\n        callback();\r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const readData = (location, callback) => async (dispatch) =>{\r\n    try{\r\n        const res = await axios.get(`/read/${location}`);\r\n        dispatch({\r\n            type: 'ALLFILES',\r\n            payload: res.body\r\n        });\r\n        callback();\r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const updateData = (reportId,title,location,description,callback) => async () =>{\r\n    try{\r\n        const res = await axios.put(`/update/${reportId}`, {title,location,description});\r\n        callback();\r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const deleteData = ({reportId}, callback) => async () =>{\r\n    try{\r\n        const res = await axios.delete(`/delete/${reportId}`);\r\n        callback();\r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n    }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        const { title, location, description } = this.props;\r\n        return (\r\n            <div className=\"container\">\r\n                <div>\r\n                  {`${title}`}\r\n                </div>\r\n                <div className=\"body__container\">\r\n                                return (\r\n                                        <div className=\"event-item\">\r\n                                            <div className=\"event-center\">\r\n                                                {`${location}`}\r\n                                            </div>\r\n                                            <div className=\"event-description\">\r\n                                                {`${description}`}\r\n                                            </div>\r\n                                        </div>\r\n                                );\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React, {Component} from \"react\";\r\nimport {Button, FormGroup, FormControl, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { connect } from 'react-redux';\r\nimport { readData } from '../actions';\r\nimport Card from '../components/Card';\r\nimport Columns from 'react-columns';\r\n\r\n// show reports\r\nclass DashboardPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      yourLocation: \"\",\r\n      page: 1,\r\n      loaded: false\r\n    };\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { loginUser, history } = this.props;\r\n    const { yourLocation, page } = this.state;\r\n    var query = {\r\n      yourLocation: this.yourLocation,\r\n      page: this.page\r\n    };\r\n    readData({query},\r\n      () => this.setState({ loading: true })\r\n    );\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.props);\r\n    }\r\n  // handle refresh\r\n  handleRefresh(time){\r\n        this.intervalID = setInterval(this.readData.bind(this), time*1000);\r\n  }\r\n  renderList() {\r\n    const list = this.props.searchQuery; \r\n  \r\n    const updatedList = list.map((listItems)=>{ \r\n        return( \r\n          <div>\r\n          <div class=\"dividerLine\"></div>\r\n                <Card title = {listItems.title} location = {listItems.location} description={listItems.description}/>\r\n                </div>\r\n            );  \r\n    }); \r\n    return( \r\n      <ul>\r\n      {updatedList}</ul> \r\n  ); \r\n  }\r\n  \r\n  validateForm() {\r\n    return this.state.yourLocation.length > 1;\r\n  }\r\n  \r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n\r\n  renderForm = () => {\r\n    var {loaded} = this.state;\r\n\r\n      return (\r\n        <div className={styles.center}>\r\n          <div className=\"preference-heading__container\">\r\n            {/* Location */}\r\n          </div>\r\n          <div className=\"preference-body__container\">\r\n            <form onSubmit={this.onSubmit}>\r\n                <FormGroup controlId=\"yourLocation\" bsSize=\"large\">\r\n                  <div>What location do you want to see?</div>\r\n                  <FormControl\r\n                    value={this.state.yourLocation}\r\n                    onChange={this.handleChange}\r\n                    type=\"string\"\r\n                  />\r\n                </FormGroup>\r\n                <Button\r\n                  block\r\n                  bsSize=\"large\"\r\n                  type=\"submit\"\r\n                  disabled={!this.validateForm()}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </form>\r\n          </div>\r\n          <div className=\"Results\">\r\n    {loaded && this.renderList()}\r\n    </div>\r\n        </div>\r\n      );\r\n    \r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"dashboard__container\">\r\n        <div className=\"profile__container\">\r\n          <div className=\"profile-body__container\"></div>\r\n        </div>\r\n        {this.renderForm() }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  center: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    minHeight: \"200px\"\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { \r\n    searchQuery: state.query\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, { readData })(DashboardPage);\r\n","import React, {Component} from \"react\";\r\nimport {Button, FormGroup, FormControl } from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {createData} from \"../actions\";\r\n\r\nclass ReportPage extends Component {\r\nconstructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        title: \"\",\r\n        location: \"\",\r\n        description: \"\"\r\n    };\r\n}\r\n\r\ncomponentDidMount(){\r\n  console.log(this.props);\r\n}\r\nvalidateForm() {\r\n    return this.state.title.length > 0 && this.state.location.length > 0 && this.state.description.length > 0;\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { title, location, description } = this.state;\r\n    console.log('submit: ', title, location, description);\r\n\r\n    this.props.createData(title, location, description, () => this.props.history.push(\"/\"));\r\n    this.props.history.push(\"/success\")\r\n  }\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"container center-block\">\r\n      <div className=\"row\">\r\n      <div className=\"col-md-6 col-md-offset-3\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormGroup className=\"form-horizontal\" controlId=\"title\" bsSize=\"large\">\r\n            <div>Title</div>\r\n            <FormControl\r\n              autoFocus\r\n              type=\"title\"\r\n              value={this.state.title}\r\n              onChange={this.handleChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"location\" bsSize=\"large\">\r\n            <div>Location</div>\r\n            <FormControl\r\n              value={this.state.location}\r\n              onChange={this.handleChange}\r\n              type=\"location\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"description\" bsSize=\"large\">\r\n            <div>Description</div>\r\n            <FormControl\r\n              value={this.state.description}\r\n              onChange={this.handleChange}\r\n              type=\"description\"\r\n            />\r\n          </FormGroup>\r\n          <Button\r\n            block\r\n            bsSize=\"large\"\r\n            disabled={!this.validateForm()}\r\n            type=\"submit\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </form>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { createData })(ReportPage);\r\n","import React, { Component } from 'react'\r\n// import { ButtonToolbar, Button } from \"react-bootstrap\"\r\nimport { connect } from 'react-redux'\r\nimport { createData } from '../actions'\r\nimport Columns from 'react-columns';\r\n\r\n// get area rating\r\nclass ClassifierPage extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      title: 'Classify Page',\r\n      location: '',\r\n      description: '',\r\n      loaded: false\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { user, token, offsite, offsiteFake } = this.props;\r\n  \r\n      // if(user !== undefined && user.active){\r\n          \r\n      // }else{\r\n      //     this.props.history.push(\"/\");\r\n      // }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.props);\r\n    }\r\n  // handle refresh\r\n  handleRefresh(time){\r\n        this.intervalID = setInterval(this.offsiteFake.bind(this), time*1000);\r\n  }\r\n\r\n  renderList() {\r\n    const list = this.props.offsite; \r\n  \r\n    const updatedList = list.map((listItems)=>{ \r\n        return( \r\n          <div>\r\n          <div class=\"dividerLine\"></div>\r\n                <Columns columns=\"9\">\r\n                <div>{listItems.ticketNum}</div>\r\n                </Columns>\r\n                </div>\r\n            );  \r\n    }); \r\n    return( \r\n      <ul>\r\n        <Columns columns=\"9\">\r\n  <div>ticketNum</div>\r\n  </Columns>\r\n      {updatedList}</ul> \r\n  ); \r\n  }\r\n\r\n  render () {\r\n    var {loaded} = this.state;\r\n\r\n    return (\r\n      <div>\r\n    <div className=\"Results\">\r\n    {loaded && this.renderList()}\r\n    </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { \r\n    searchQuery: state.query\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { createData })(ClassifierPage)\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Panel } from 'react-bootstrap';\r\n\r\nclass SuccessPage extends Component {\r\n    componentDidMount() {\r\n            setTimeout(() => this.props.history.push('/'), 2000);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h3>You have submited your report Thank You!</h3>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <p>You will now be re-directed!</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { SuccessPage })(SuccessPage);","import React, { Component } from 'react'\r\nimport { Navbar, NavItem, Nav, NavDropdown, Form, FormControl, Button} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nclass NavBar extends Component {\r\n  render () {\r\n    const { user } = this.props\r\n    return (\r\n      <div>\r\n        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\" />     \r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n          <Navbar.Brand href=\"/report\">Anonymous Reports</Navbar.Brand>\r\n          <Navbar id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"/\">Home</Nav.Link>\r\n              <Nav.Link href=\"/classify\">Classify</Nav.Link>\r\n            </Nav>\r\n          </Navbar>\r\n\r\n        </Navbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null)(NavBar)","import React, {Component} from \"react\";\r\nimport {Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport { relative } from \"path\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer style={styles.footerStyle} className=\"text-center navbar-fixed-bottom .bg-secondary\">\r\n      \r\n      <div className=\"copyright-text\">\r\n        <p>© Creeper Reports 2019</p>\r\n      </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  footerStyle: {\r\n    padding: \"10px\",\r\n    color: 'white',\r\n    background: \"grey\",\r\n    position: 'absolute',\r\n    left: '0',\r\n    width: '100%',\r\n    bottom: '0'\r\n    \r\n  }\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport DashboardPage from \"./pages/MainPage\";\r\nimport ReportPage from \"./pages/ReportPage\";\r\nimport ClassifierPage from \"./pages/ClassifierPage\";\r\nimport SuccessPage from \"./pages/successPage\";\r\n\r\nimport NavBar from './components/NavBar';\r\nimport Footer from './components/Footer';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <div style={{ height: '100vh' }}>\r\n        <NavBar/>\r\n          <Router>\r\n            <div class='container' style={{ marginBottom: '7rem' }}>\r\n                <Route path=\"/\" exact component={DashboardPage} />\r\n                <Route path=\"/dashboard\" exact component={DashboardPage} />\r\n                <Route path=\"/report\" exact component={ReportPage} />\r\n                <Route path=\"/classify\" exact component={ClassifierPage} />\r\n                <Route path=\"/success\" exact component={SuccessPage} />\r\n            </div>\r\n          </Router> \r\n          <div>\r\n            <Footer/>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\n\r\nimport allfiles from './readReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  state: (state = {}) => state,\r\n  allfiles\r\n});\r\n\r\nexport default rootReducer;","export default function(state = {}, action) {\r\n    switch(action.type) {\r\n        case 'ALLFILES':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nimport reducers from '../reducers';\r\n\r\nconst middlewares = [thunk];\r\n\r\nmiddlewares.push(createLogger());\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    applyMiddleware(...middlewares)\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport STORE from './store';\r\n\r\nReactDOM.render(\r\n    <Provider store={STORE}><App /></Provider>,\r\n    document.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}